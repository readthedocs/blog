.. post:: September 12, 2022
   :tags: metabase, data, grant
   :author: Manuel
   :location: BCN

.. meta::
   :description lang=en:
      Collect and analyze project and build data to make better decision about our product
      with a strong focus on the user experience.

Knowing more about ourselves
============================

Read the Docs generates a lot of data on it owns.
We are the largest documentation platform out there,
with hundred thousands projects using our product every day to host their documentation.
This data includes simple things like number of users,
builds using a particular Docker image,
as well as more interesting ones like pageviews or Python dependencies installed via a ``requirements.txt`` file.
However, we haven't collected this data during the first 10 years of our existence.

Last year, with the growth of our product and the team,
plus the `grant we received <https://blog.readthedocs.com/czi-grant-announcement/>`_,
we started asking ourselves some questions that we weren't able to answer with the data we had in our database and logs.
At that time, `we decided to start working on a project <https://github.com/readthedocs/readthedocs.org/pull/8124>`_
to collect relevant data to answer those and other questions that could come up in the future.


What data are we collecting?
----------------------------

As you may already know, Read the Docs has a strict `privacy policy <https://docs.readthedocs.io/en/stable/privacy-policy.html>`_
which we follow to ensure we are protecting the privacy of our users, authors and readers.
It's still worth to mention that most of the data we collect is publicly available,
or it's generated by Read the Docs itself.

The data generated by Read the Docs itself are project configurations (e.g. PR build enabled, default branch, etc),
simple builds information (e.g. number of builds, length of the build, etc), redirects, web hooks, search queries, pageviews,
and others that are directly related to features exposed to users

Besides, the data generated by Read the Docs, *we are now collecting new extra data*.
This new data is useful to answer most of those questions we weren't able to in the past,
and is mainly related to the build process.
Like Python dependencies and APT packages installed by the user and the YAML config file used, among others.

This allows us to answer questions like the following ones:

- "How many projects are using Sphinx v4.5.0 in their builds?"
- "What are the most used Sphinx extensions?"
- "How is the adoption of a new Sphinx version once it is released?"


Plotting it nicely
------------------

`EthicalAds <https://www.ethicalads.io/>`_, the privacy-focused ad network Read the Docs is behind,
suggested us to `Metabase <https://www.metabase.com/>`_ since they were already using it for a similar use case and they were happy with it.
We connected our PostgreSQL replica database to it and started plotting this data to get some insights from it.
We found awesome things we want to start sharing with all the documentation community,
since we think it will useful not only for ourselves but also for package maintainers.


Sphinx extensions used in the last 15 days
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. image:: sphinx-extensions.png

.. note::

   We excluded ``sphinx-rtd-theme`` and ``sphinxcontrib-websupport`` because they are too high and break the relation with the others in the graph.
   Also, only extensions used by more than 10 projects are showed.


Sphinx adoption over time
~~~~~~~~~~~~~~~~~~~~~~~~~

.. image:: sphinx-adoption.png


Projects using MyST to write Markdown
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. image:: myst-parser.png


VCS types used by projects with success builds in last year
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. image:: project-vcs-types.png


Docker image used on build in last 15 days
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. image:: build-docker-images.png


Build time per project
~~~~~~~~~~~~~~~~~~~~~~

.. image:: build-times.png


Analyzing the data
------------------

As you can see in the examples shown above,
there are lot of insights that we can get from the data we've been collecting.
We will use this information to make better decisions for our product with a strong focus on our users:

- Know how much a feature is used
- Prioritize work based on people's usage of those features
- Evaluate the impact of a feature marked to be deprecated
- Detect platform abuse
- Analyze marketing campaigns and feature adoption by users
- Communicate relevant insights to other open source projects and organizations

There is a lot we can do with the data we have.
We are still learning in the process,
but we've already used this data to understand more about our product
and how our users use it.


Conclusion
----------

We are really happy with data we were able to plot so far!
At the moment, we only have data for the last ~6 months and it has been useful already.
It has been super interesting to use this plots to make arguments when evaluating the deprecation of a feature
or even when *suggesting a new UX* in the discussions we've had recently.

`Let us know <mailto:support@readthedocs.org>`_ if this data would be useful for your project in particular or for the whole documentation community.
We would love to know if there are any data or plots you are interested in so that we can query our database and expose it to you and the community.

We will continue taking a look at this data in the following months.
Try to find more insights that helps us to make better decision for our product and users.
Subscribe to our newsletter to don't miss it!





