.. post:: September 12, 2022
   :tags: metabase, data, grant
   :author: Manuel
   :location: BCN

.. meta::
   :description lang=en:
      Collect and analyze project and build data to make better decision about our product
      with a strong focus on the user experience.

Knowing more about how people use our service
=============================================

Read the Docs generates a lot of data.
We are the largest documentation platform out there,
with hundreds of thousands of projects using our product every day to host their documentation.
This data includes simple things like number of users,
builds using a particular Docker image,
as well as more interesting ones like pageviews or Python dependencies installed via a ``requirements.txt`` file.
We didn't collect this data in a systemic way during the first 10 years of our existence.

Last year, with the growth of our product and the team,
plus the `CZI grant we received <https://blog.readthedocs.com/czi-grant-announcement/>`_,
we started asking ourselves some questions that we couldn't answer with the data we had.
We decided to `start working on a project <https://github.com/readthedocs/readthedocs.org/pull/8124>`_
to collect relevant data to answer a large number questions about how people use our service.

What data are we collecting?
----------------------------

As you may already know, Read the Docs has a strict `privacy policy <https://docs.readthedocs.io/en/stable/privacy-policy.html>`_
which we follow to ensure we are protecting the privacy of our users, authors and readers.
It's still worth mentioning that most of the data we collect is publicly available,
or is generated by our own service.

The data generated by Read the Docs which we already had access to was mostly high-level about our database objects.
A few examples would be:

* project configuration (e.g. PR build enabled, default branch)
* build metadata (e.g. number of builds, length of builds)
* platform information (redirects, webhooks, search queries, pageviews)

With our new data collections project,
we were able to collect a lot of new, interesting data.
This new data allows us to answer a whole new set of questions,
and is mainly related to the build process
The new information that we're collecting includes:

* Python dependencies installed during a documentation build
* Apt packages installed prior to building docs
* The entire contents of the `Read the Docs configuration file <https://docs.readthedocs.io/en/stable/config-file/index.html>`_

This allows us to answer questions like:

- "How many projects are using Sphinx v4.5.0 in their builds?"
- "What are the most used Sphinx extensions?"
- "How fast is the adoption of a new Sphinx version once it is released?"

Plotting it nicely
------------------

The `EthicalAds <https://www.ethicalads.io/>`_ team, who is building our privacy-first ad network,
suggested using `Metabase <https://www.metabase.com/>`_ since they were already using it for a similar use case and they were happy with it.
We connected our PostgreSQL replica database to it and started plotting this data to get some insights.
We found awesome things we want to start sharing with all the documentation community,
since we think it will useful not only for ourselves but also for package maintainers.

Sphinx extensions used in the last 15 days
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. image:: /img/sphinx-extensions.png
   :align: center
   :width: 100%

.. note::

   We excluded ``sphinx-rtd-theme`` and ``sphinxcontrib-websupport`` because they are too high and break the relation with the others in the graph.
   Also, only extensions used by more than 10 projects are showed.

Sphinx adoption over time
~~~~~~~~~~~~~~~~~~~~~~~~~

.. image:: /img/sphinx-adoption.png
   :align: center
   :width: 100%


Projects using MyST to write Markdown in Sphinx
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. image:: /img/myst-parser.png
   :align: center
   :width: 100%


VCS types used by projects with successful builds in last year
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. image:: /img/project-vcs-types.png
   :align: center
   :width: 100%


Docker image used in the last 15 days
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. image:: /img/build-docker-images.png
   :align: center
   :width: 100%


Build time per project
~~~~~~~~~~~~~~~~~~~~~~

.. image:: /img/build-times.png
   :align: center
   :width: 100%


Analyzing the data
------------------

As you can see in the examples shown above,
there are lot of insights that we can get from the data we've been collecting.
We will use this information to make better decisions for our product with a strong focus on our users:

- Know how much a feature is used
- Prioritize work based on people's usage of our features
- Evaluate the impact of a feature marked to be deprecated
- Detect platform abuse
- Analyze marketing campaigns and documentation updates impact on feature adoption
- Communicate relevant insights to other open source projects and organizations

There is a lot we can do with the data we have.
We are still exploring and learning about the data,
but we've already used this data to understand more about our product
and how our users use it.

Conclusion
----------

We are really happy with data we were able to plot so far!
At the moment, we only have data for the last ~6 months and it has been useful already.
It has been very interesting to use these plots to make arguments when evaluating the deprecation of a feature,
or even when *suggesting a new UX* in the discussions we've had recently.

`Let us know <mailto:support@readthedocs.org>`_ if you would like to use this data in some fashion,
or if  there are any data or plots you are interested in so that we can query our database and share it with you and the community.

We will continue taking a look at this data in the following months.
Try to find more insights that helps us to make better decision for our product and users.
Subscribe to our newsletter so you don't miss it!



